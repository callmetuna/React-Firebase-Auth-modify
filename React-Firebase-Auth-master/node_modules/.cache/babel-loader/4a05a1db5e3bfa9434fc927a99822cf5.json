{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\john\\\\Desktop\\\\projects\\\\razan\\\\razanproject\\\\React-Firebase-Auth-master\\\\src\\\\components\\\\Signup.js\";\nimport React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\nexport default function Signup() {\n  const usernameRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const {\n    signup\n  } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  var pssvalObj = {\n    capital: false,\n    lower: false,\n    number: false,\n    strength: 0 // strnght 0 = empty, 1 = weak, 2 = good, 3 = strong\n    // at least level 2 is required\n\n  };\n  const [pssval, setpssval] = useState(pssvalObj);\n  const [pwstn, setpwstn] = useState(0);\n  const history = useHistory();\n\n  const checkStrength = () => {\n    var strength = 0;\n    const cond1 = /^(?=.*[a-z]).{6,20}$/; // at least one lower case\n\n    const cond2 = /^(?=.*[A-Z]).{6,20}$/; // at least one upper case\n\n    const cond3 = /^(?=.*[0-9]).{6,20}$/; // at least one number\n\n    const cond4 = /[*@!#%&()^~{}]+/;\n    const password = passwordRef.current.value;\n    console.log(password);\n\n    if (!password) {\n      strength = 0;\n    } else if (password.length < 6) {\n      strength = 1;\n    } else if (password.length >= 20) {\n      strength = 1;\n    } else if (!password.match(cond1)) {\n      strength = 1;\n    } else if (!password.match(cond2)) {\n      strength = 1;\n    } else if (!password.match(cond3)) {\n      strength = 2;\n    } else if (!password.match(cond4)) {\n      strength = 2;\n    } else if (password.length >= 10) {\n      strength = 3;\n    } else {\n      strength = 2;\n    } //  console.log(password.match(cond1));\n\n\n    console.log(\"strength\", strength);\n    var newObj = pssval;\n    newObj.strength = strength;\n    setpssval(newObj);\n    setpwstn(strength);\n  };\n\n  const passwordValidator = () => {\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    const cond1 = /^(?=.*[a-z]).{6,20}$/; // at least one lower case\n\n    const cond2 = /^(?=.*[A-Z]).{6,20}$/; // at least one upper case\n\n    const cond3 = /^(?=.*[0-9]).{6,20}$/; // at least one number\n\n    const password = passwordRef.current.value;\n\n    if (!password) {\n      return setError(\"password is required\");\n    } else if (password.length < 6) {\n      return setError(\"Password must be longer than 6 characters\"); // errors.password = \"Password must be longer than 6 characters\";\n    } else if (password.length >= 20) {\n      return setError(\"Password must shorter than 20 characters\"); // errors.password = \"Password must shorter than 20 characters\";\n    } else if (!password.match(cond1)) {\n      return setError(\"Password must contain at least one lowercase\"); // errors.password = \"Password must contain at least one lowercase\";\n    } else if (!password.match(cond2)) {\n      return setError(\"Password must contain at least one capital letter\"); // errors.password = \"Password must contain at least one capital letter\";\n    } else if (!password.match(cond3)) {\n      return setError(\"Password must contain at least a number\"); // errors.password = \"Password must contain at least a number\";\n    } else {\n      return 1;\n    }\n  }; //password validation\n  // const cond1 = \"/^(?=.*[a-z]).{6,20}$/\";\n  // const cond2 = \"/^(?=.*[A-Z]).{6,20}$/\";\n  // const cond3 = \"/^(?=.*[0-9]).{6,20}$/\";\n  // const password = inputValues.password;\n  // if (!password) {\n  //   errors.password = \"password is required\";\n  // } else if (password.length < 6) {\n  //   errors.password = \"Password must be longer than 6 characters\";\n  // } else if (password.length >= 20) {\n  //   errors.password = \"Password must shorter than 20 characters\";\n  // } else if (!password.match(cond1)) {\n  //   errors.password = \"Password must contain at least one lowercase\";\n  // } else if (!password.match(cond2)) {\n  //   errors.password = \"Password must contain at least one capital letter\";\n  // } else if (!password.match(cond3)) {\n  //   errors.password = \"Password must contain at least a number\";\n  // } else {\n  //   errors.password = \"\";\n  // }\n\n\n  async function handleSubmit(e) {\n    e.preventDefault(); // if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n    //   return setError(\"Passwords do not match\")\n    // }\n\n    if (passwordValidator() != 1) {\n      return null;\n    }\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await signup(emailRef.current.value, passwordRef.current.value);\n      history.push(\"/\");\n    } catch {\n      setError(\"Failed to create an account\");\n    }\n\n    setLoading(false);\n  }\n\n  console.log(-pwstn);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, \"Sign Up\"), error && /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, error), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    ref: usernameRef,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    ref: emailRef,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    ref: passwordRef,\n    required: true,\n    onChange: checkStrength,\n    isValid: pwstn > 1,\n    isInvalid: pwstn == 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    tooltip: true,\n    style: {\n      position: \"unset\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, pwstn > 2 ? \"strong\" : \"good\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    tooltip: true,\n    type: \"invalid\",\n    style: {\n      position: \"unset\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, \"weak\")), /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"password-confirm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }, \"Password Confirmation\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    ref: passwordConfirmRef,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    disabled: loading,\n    className: \"w-100\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, \"Sign Up\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-100 text-center mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, \"Already have an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 34\n    }\n  }, \"Log In\")));\n}","map":{"version":3,"sources":["C:/Users/john/Desktop/projects/razan/razanproject/React-Firebase-Auth-master/src/components/Signup.js"],"names":["React","useRef","useState","Form","Button","Card","Alert","useAuth","Link","useHistory","Signup","usernameRef","emailRef","passwordRef","passwordConfirmRef","signup","error","setError","loading","setLoading","pssvalObj","capital","lower","number","strength","pssval","setpssval","pwstn","setpwstn","history","checkStrength","cond1","cond2","cond3","cond4","password","current","value","console","log","length","match","newObj","passwordValidator","handleSubmit","e","preventDefault","push","position"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\n\nexport default function Signup() {\n  const usernameRef = useRef()\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const passwordConfirmRef = useRef()\n  const { signup } = useAuth()\n  const [error, setError] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  var pssvalObj = {\n    capital:false,\n    lower:false,\n    number:false,\n    strength:0 \n    // strnght 0 = empty, 1 = weak, 2 = good, 3 = strong\n    // at least level 2 is required\n  }\n  const [pssval, setpssval] = useState(pssvalObj);\n  const [pwstn, setpwstn] = useState(0);\n  const history = useHistory()\n\n\n  const checkStrength = ()=>{\n\n    var strength = 0;\n    const cond1 = /^(?=.*[a-z]).{6,20}$/; \n    // at least one lower case\n    const cond2 = /^(?=.*[A-Z]).{6,20}$/;\n    // at least one upper case\n    const cond3 = /^(?=.*[0-9]).{6,20}$/;\n    // at least one number\n    const cond4 = /[*@!#%&()^~{}]+/;\n\n    const password =passwordRef.current.value;\n    console.log(password);\n    if (!password) {\n      strength = 0;\n    } else if (password.length < 6) {\n     strength = 1;\n    } else if (password.length >= 20) {\n     strength = 1;\n    } else if (!password.match(cond1)) {\n     strength = 1;\n    } else if (!password.match(cond2)) {\n     strength = 1;\n    } else if (!password.match(cond3)) {\n     strength = 2;\n    } else if (!password.match(cond4)){\n      strength = 2\n    } else if (password.length >= 10) {\n      strength = 3;\n    } else{\n      strength = 2;\n    }\n    //  console.log(password.match(cond1));\n     console.log(\"strength\", strength);\n\n     var newObj = pssval;\n     newObj.strength = strength;\n     setpssval(newObj);\n     setpwstn(strength)\n  }\n\n  const passwordValidator = ()=>{\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\")\n    }\n\n    const cond1 = /^(?=.*[a-z]).{6,20}$/; \n    // at least one lower case\n    const cond2 = /^(?=.*[A-Z]).{6,20}$/;\n    // at least one upper case\n    const cond3 = /^(?=.*[0-9]).{6,20}$/;\n    // at least one number\n\n    const password = passwordRef.current.value;\n    if (!password) {\n      return setError(\"password is required\");\n    } else if (password.length < 6) {\n      return setError(\"Password must be longer than 6 characters\")\n      // errors.password = \"Password must be longer than 6 characters\";\n    } else if (password.length >= 20) {\n      return setError(\"Password must shorter than 20 characters\")\n      // errors.password = \"Password must shorter than 20 characters\";\n    } else if (!password.match(cond1)) {\n      return setError(\"Password must contain at least one lowercase\")\n      // errors.password = \"Password must contain at least one lowercase\";\n    } else if (!password.match(cond2)) {\n      return setError(\"Password must contain at least one capital letter\");\n      // errors.password = \"Password must contain at least one capital letter\";\n    } else if (!password.match(cond3)) {\n      return setError(\"Password must contain at least a number\");\n      // errors.password = \"Password must contain at least a number\";\n    } else {\n      return 1;\n    }\n\n  }\n\n  //password validation\n  // const cond1 = \"/^(?=.*[a-z]).{6,20}$/\";\n  // const cond2 = \"/^(?=.*[A-Z]).{6,20}$/\";\n  // const cond3 = \"/^(?=.*[0-9]).{6,20}$/\";\n  // const password = inputValues.password;\n  // if (!password) {\n  //   errors.password = \"password is required\";\n  // } else if (password.length < 6) {\n  //   errors.password = \"Password must be longer than 6 characters\";\n  // } else if (password.length >= 20) {\n  //   errors.password = \"Password must shorter than 20 characters\";\n  // } else if (!password.match(cond1)) {\n  //   errors.password = \"Password must contain at least one lowercase\";\n  // } else if (!password.match(cond2)) {\n  //   errors.password = \"Password must contain at least one capital letter\";\n  // } else if (!password.match(cond3)) {\n  //   errors.password = \"Password must contain at least a number\";\n  // } else {\n  //   errors.password = \"\";\n  // }\n\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n\n    // if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n    //   return setError(\"Passwords do not match\")\n    // }\n    if(passwordValidator()!=1){\n      return null;\n    }\n\n    try {\n      setError(\"\")\n      setLoading(true)\n      await signup(emailRef.current.value, passwordRef.current.value)\n      history.push(\"/\")\n    } catch {\n      setError(\"Failed to create an account\")\n    }\n\n    setLoading(false)\n  }\nconsole.log(-pwstn);\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Sign Up</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n          <Form.Group id=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control type=\"email\" ref={usernameRef} required />\n            </Form.Group>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" ref={passwordRef} required onChange={checkStrength} isValid={pwstn>1} isInvalid={pwstn==1}/>\n              <Form.Control.Feedback tooltip \n                style={{position:\"unset\"}}\n              >{pwstn>2?\"strong\":\"good\"}</Form.Control.Feedback>\n              <Form.Control.Feedback tooltip \n                type=\"invalid\"\n                style={{position:\"unset\"}}\n              >weak</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control type=\"password\" ref={passwordConfirmRef} required \n              />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Sign Up\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Already have an account? <Link to=\"/login\">Log In</Link>\n      </div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}